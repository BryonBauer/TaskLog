// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskLog.Models;

namespace TaskLog.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskLog.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("DueDate");

                    b.Property<int>("EstimatedTime");

                    b.Property<int?>("ProjectCreatorUserId");

                    b.Property<string>("ProjectDescription")
                        .IsRequired();

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.Property<string>("ProjectStatus")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<bool>("hasTask");

                    b.HasKey("ProjectID");

                    b.HasIndex("ProjectCreatorUserId");

                    b.HasIndex("ProjectID")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TaskLog.Models.SubTask", b =>
                {
                    b.Property<int>("SubTaskID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("DueDate");

                    b.Property<int>("EstimatedTime");

                    b.Property<int?>("ParentTaskId");

                    b.Property<int?>("SubTaskCreatorUserId");

                    b.Property<string>("SubTaskDescription")
                        .IsRequired();

                    b.Property<string>("SubTaskName")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<bool>("hasInnerSubTasks");

                    b.HasKey("SubTaskID");

                    b.HasIndex("ParentTaskId");

                    b.HasIndex("SubTaskCreatorUserId");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("TaskLog.Models.Task", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("DueDate");

                    b.Property<int>("EstimatedTime");

                    b.Property<int?>("ParentProjectId");

                    b.Property<int?>("TaskCreatorUserId");

                    b.Property<string>("TaskDescription")
                        .IsRequired();

                    b.Property<string>("TaskName")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<bool>("hasSubTasks");

                    b.HasKey("TaskID");

                    b.HasIndex("ParentProjectId");

                    b.HasIndex("TaskCreatorUserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskLog.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskLog.Models.Project", b =>
                {
                    b.HasOne("TaskLog.Models.User", "ProjectCreator")
                        .WithMany()
                        .HasForeignKey("ProjectCreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaskLog.Models.SubTask", b =>
                {
                    b.HasOne("TaskLog.Models.Task", "ParentTask")
                        .WithMany()
                        .HasForeignKey("ParentTaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaskLog.Models.User", "SubTaskCreator")
                        .WithMany()
                        .HasForeignKey("SubTaskCreatorUserId");
                });

            modelBuilder.Entity("TaskLog.Models.Task", b =>
                {
                    b.HasOne("TaskLog.Models.Project", "ParentProject")
                        .WithMany()
                        .HasForeignKey("ParentProjectId");

                    b.HasOne("TaskLog.Models.User", "TaskCreator")
                        .WithMany()
                        .HasForeignKey("TaskCreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
